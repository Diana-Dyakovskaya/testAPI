@charset "UTF-8";
/*
input: '10px', output: 10;
input: 10px, output: 10px
 */
/*********************************************************/
/******************** Media Queries **********************/
/*********************************************************/
/***
  Миксин оперирует данными из массива $breakpoints. Для ширины и высоты указываются собственные параметры.
  Массив `height` может безболезненно расширяться, без затрагивания кода самого миксина, просто добавляйте
  свои значения. Массив `width` безболезненно расширяется только для значений, бОльших, чем `desktop`,
  в остальных случаях, можно менять значения, а при добавлении новых ключей - необходимо заглянуть в исходник.

  Миксин принимает 3 основных аргумента:
    1. $breakpoint - передаваемый параметр, должен равняться одному из значений, указанных в массиве $breakpoints.

    2. $statement - передаваемый параметр, который может быть трех видов для медиа-запросов `width`:
      - down: применяется по умолчанию, и устанавливает правило `@media (max-width: ЗНАЧЕНИЕ)`. Следует понимать,
        что берется не текущее значение брекпоинта, а последующее минус 1.
        Например, брекпоинт `mobile` имеет значение 480px, но при этом правило будет создано со значением
         следующего ключа - `tabletSmall: 768 - 1`. То есть получим => `@media (max-width: 767px)`.

        *! для последнего значения в массиве (`desktop`) миксин примет вид `@media (min-width: ЗНАЧЕНИЕ)`. !*

      - up: в случае, если необходимо задать правило от какого-то значения. То есть, всё, что выше значения.
        Например, `(tablet, up)` => `@media (min-width: 1260px)`.

      - only: устанавливает ограничение в +1 один шаг от текущего значения ключа. Например:
        (tabletSmall, only) => `@media (min-width: 768px) and (max-width: 1023px)`.

         *! При `mobile, only` установлено поведение: => `@media (max-width: 767px)`. !*
         *! При `tablet, only` установлено поведение: => `@media (min-width: 768px) and (max-width: 1259px)`. !*
         *! для последнего значения в массиве (`desktop`) миксин примет вид `@media (min-width: ЗНАЧЕНИЕ)`. !*

     3. $isHeight - передаваемый булевый параметр, который меняет медиа-запросы с ширин на высоты.
        По умолчанию отключен. При данном вызове необходимо передавать вторым аргументом параметр `down`.
        Поведение по умолчанию => `@media (max-height: ЗНАЧЕНИЕ)`

     Примеры вызова:
      - высота:
        @include media(sm, down, true) {
          .card-test-block {
            color: red;
          }
        } => @media (max-height:650px)

      - ширина:
        @include media(mobile) {
            .card-test-block {
              color: white;
            }
          } => @media (max-width: 767px)

        @include media(tabletSmall, up) {
          .card-test-block {
            color: white;
          }
        } => @media (min-width: 1024px)

        @include media(laptop, only) {
          .card-test-block {
            color: black;
          }
        } => @media (min-width: 1260px) and (max-width: 1499px)
***/
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
header {
  background-color: #ffffff;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}

html {
  font-family: "Work Sans", "Anton", "Arial", sans-serif;
  font-size: 18px;
  font-weight: 500;
  line-height: 21px;
  color: #151c22;
}

h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}

a {
  color: inherit;
  text-decoration: none !important;
  transition: all 0.3s ease;
}

li {
  text-decoration: none;
  list-style-type: none;
}

button {
  outline: 0 !important;
  border: none;
  background: none;
  cursor: pointer;
}

::placeholder {
  /* Firefox, Chrome, Opera */
  color: #7e7e7e;
}

input:-ms-input-placeholder {
  /* Internet Explorer 10-11 */
  color: #7e7e7e;
}
input::-ms-input-placeholder {
  /* Microsoft Edge */
  color: #7e7e7e;
}

/* Изображения */
img {
  max-width: 100%;
  object-fit: cover;
}

.container {
  max-width: 1366px;
  padding: 0 98px;
  margin: 0 auto;
}

@media (max-width: 1025px) {
  .container {
    padding: 0 45px;
  }
}
@media (max-width: 481px) {
  .container {
    padding: 0 15px;
  }
}
._ml-1 {
  margin-left: 0.5rem;
}

._mr-1 {
  margin-right: 0.5rem;
}

.main {
  min-height: 100vh;
  padding: 50px;
  color: #003767;
  text-align: center;
  background-color: #f0f8ff;
}

.btns {
  display: flex;
  margin-top: 50px;
  gap: 30px;
  justify-content: center;
}

.btn {
  padding: 20px 50px;
  background-color: #fff0f8;
  border: 2px solid #f0fff7;
  border-radius: 15px;
  box-shadow: 0 0 5px #f0fff7;
  cursor: pointer;
}

.btn:hover {
  box-shadow: 0 0 15px #c9ffe2;
}

.btn__text {
  font-size: 20px;
  line-height: 22px;
}

.content {
  width: 80vw;
  margin-top: 50px;
  margin-right: auto;
  margin-left: auto;
  background-color: #fff0f8;
  border: 2px solid #f0fff7;
  border-radius: 15px;
  box-shadow: 0 0 5px #f0fff7;
  transition: all 0.3s ease;
}

.container {
  margin: 50px auto;
  padding: 0 20px;
  text-align: center;
}

[id=app] {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  justify-content: center;
}

article {
  max-width: 300px;
  padding: 15px;
  background-color: #f0f8ff;
  border: 2px solid #f0fff7;
  border-radius: 15px;
  box-shadow: 0 0 5px #f0fff7;
}

.card__title {
  text-transform: uppercase;
}

.card__body {
  margin-top: 10px;
  font-size: 14px;
}

/*# sourceMappingURL=styles.css.map */
